.skillsSection {
  padding: 120px 0;
  position: relative;
  overflow: hidden;
  background: var(--bg-primary);
  perspective: 1000px;
  
  .container {
    width: 90%;
    max-width: 1400px;
    margin: 0 auto;
    position: relative;
    z-index: 2;
  }
  
  .sectionHeader {
    text-align: center;
    margin-bottom: 60px;
    
    .sectionTitle {
      font-size: 36px;
      font-weight: 700;
      color: var(--text-primary);
      margin: 0 0 16px 0;
      position: relative;
      display: inline-block;
      
      &::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 3px;
        background: linear-gradient(to right, var(--primary-color), rgba(250, 33, 4, 0.5));
      }
    }
    
    .sectionDescription {
      font-size: 18px;
      color: var(--text-secondary);
      max-width: 700px;
      margin: 0 auto 30px;
    }
    
    .effectsToggle {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      background: rgba(250, 33, 4, 0.1);
      border: 1px solid rgba(250, 33, 4, 0.2);
      color: var(--primary-color);
      border-radius: 30px;
      padding: 10px 20px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      
      &:hover {
        background: rgba(250, 33, 4, 0.15);
        transform: translateY(-2px);
      }
      
      svg {
        stroke: var(--primary-color);
      }
    }
  }
  
  .skillsContainer {
    position: relative;
    background: rgba(26, 26, 26, 0.7);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
    overflow: hidden;
    perspective: 1200px;
    min-height: 500px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    
    // When 3D is disabled (default state)
    &.disabled3D {
      .cube {
        transform-style: flat !important;
        animation: none !important;
        cursor: default;
        
        // Override face transforms to remove 3D
        .face {
          transform: none !important;
          box-shadow: none !important;
        }
        
        // Hide all faces except the front
        .face:not(.front) {
          display: none;
        }
        
        // Restyle the front face for a minimal, highâ€‘end look
        .face.front {
          border: 1px solid var(--border-color, #e0e0e0);
          background: transparent; // Let the inline background on the cube show through
          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
          transition: transform 0.3s ease, box-shadow 0.3s ease;
          
          &:hover {
            transform: scale(1.02);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
          }
        }
      }
    }
  }
  
  .categoryNav {
    display: flex;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    position: relative;
    z-index: 5;
    
    @media (max-width: 768px) {
      flex-direction: column;
    }
    
    .categoryButton {
      padding: 20px 30px;
      background: transparent;
      border: none;
      color: var(--text-secondary);
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      flex: 1;
      text-align: center;
      
      &::after {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 0;
        width: 0;
        height: 3px;
        background: var(--primary-color);
        transition: width 0.3s ease;
      }
      
      &:hover {
        color: var(--text-primary);
        
        &::after {
          width: 30%;
        }
      }
      
      &.active {
        color: var(--text-primary);
        
        &::after {
          width: 100%;
        }
      }
    }
  }
  
  .cubesWrapper {
    position: relative;
    width: 100%;
    min-height: 400px;
  }
  
  .cubesContainer {
    padding: 60px 30px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 60px;
    perspective: 1000px;
    position: absolute;
    width: 100%;
    min-height: 400px;
    
    @media (max-width: 992px) {
      grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
      gap: 40px;
    }
    
    @media (max-width: 768px) {
      padding: 40px 20px;
    }
    
    @media (max-width: 576px) {
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 30px;
    }
  }
  
  // Cube container and styling
  .cubeContainer {
    perspective: 1000px;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 180px;
    
    @media (max-width: 576px) {
      height: 150px;
    }
  }
  
  .cube {
    position: relative;
    width: 140px;
    height: 140px;
    transform-style: preserve-3d;
    cursor: grab;
    transform-origin: center center;
    will-change: transform;
    
    &:active {
      cursor: grabbing;
    }
    
    @media (max-width: 576px) {
      width: 110px;
      height: 110px;
    }
  }
  
  // Cube faces (normal 3D mode)
  .face {
    position: absolute;
    width: 100%;
    height: 100%;
    border: 2px solid;
    background: rgba(30, 30, 30, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    backface-visibility: visible;
    box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
    
    &.front {
      transform: translateZ(70px);
      
      @media (max-width: 576px) {
        transform: translateZ(55px);
      }
    }
    
    &.back {
      transform: rotateY(180deg) translateZ(70px);
      
      @media (max-width: 576px) {
        transform: rotateY(180deg) translateZ(55px);
      }
    }
    
    &.left {
      transform: rotateY(-90deg) translateZ(70px);
      
      @media (max-width: 576px) {
        transform: rotateY(-90deg) translateZ(55px);
      }
    }
    
    &.right {
      transform: rotateY(90deg) translateZ(70px);
      
      @media (max-width: 576px) {
        transform: rotateY(90deg) translateZ(55px);
      }
    }
    
    &.top {
      transform: rotateX(90deg) translateZ(70px);
      
      @media (max-width: 576px) {
        transform: rotateX(90deg) translateZ(55px);
      }
    }
    
    &.bottom {
      transform: rotateX(-90deg) translateZ(70px);
      
      @media (max-width: 576px) {
        transform: rotateX(-90deg) translateZ(55px);
      }
    }
  }
  
  .faceContent {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    color: var(--text-primary);
    transform-style: preserve-3d;
    padding: 10px;
    
    .skillIcon {
      font-size: 28px;
      margin-bottom: 12px;
      color: var(--text-primary);
      
      svg {
        stroke: currentColor;
      }
      
      // Only show icon (no text) on non-front/back faces
      .face:not(.front):not(.back) & {
        margin: 0;
        font-size: 36px;
      }
      
      @media (max-width: 576px) {
        font-size: 24px;
      }
    }
    
    .skillName {
      font-size: 16px;
      font-weight: 500;
      text-align: center;
      
      @media (max-width: 576px) {
        font-size: 14px;
      }
    }
  }
  
  // Decorative elements
  .decorativeElement1 {
    position: absolute;
    top: -150px;
    right: -150px;
    width: 300px;
    height: 300px;
    background: radial-gradient(
      circle at center,
      rgba(250, 33, 4, 0.1) 0%,
      rgba(250, 33, 4, 0) 70%
    );
    border-radius: 50%;
    filter: blur(60px);
    z-index: 0;
    pointer-events: none;
    opacity: 0.6;
  }
  
  .decorativeElement2 {
    position: absolute;
    bottom: -100px;
    left: -100px;
    width: 250px;
    height: 250px;
    background: radial-gradient(
      circle at center,
      rgba(68, 107, 255, 0.1) 0%,
      rgba(68, 107, 255, 0) 70%
    );
    border-radius: 50%;
    filter: blur(50px);
    z-index: 0;
    pointer-events: none;
    opacity: 0.6;
  }
  
  // Light theme overrides
  html.light-theme & {
    .skillsContainer {
      background: rgba(255, 255, 255, 0.8);
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba(0, 0, 0, 0.1);
    }
    
    .face {
      background: rgba(255, 255, 255, 0.8);
      box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1);
    }
    
    .categoryButton {
      &:hover, &.active {
        color: var(--primary-color);
      }
    }
  }
  
  // Animations (for 3D enabled mode only)
  @keyframes spin {
    0% {
      transform: rotateX(0) rotateY(0);
    }
    100% {
      transform: rotateX(360deg) rotateY(360deg);
    }
  }
}
